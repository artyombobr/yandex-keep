// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Note renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Note
    colors={
      Array [
        Object {
          "color": "#E84747",
          "id": 0,
        },
      ]
    }
    note={
      Object {
        "color": 0,
        "created": 1520160803000,
        "size": "s",
        "title": "Не забыть выгулять Сиба-Ину",
        "type": "text",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="note__reminder"
      >
        <div
          className="note__attachment"
        >
          <NoteText
            colors={
              Array [
                Object {
                  "color": "#E84747",
                  "id": 0,
                },
              ]
            }
            note={
              Object {
                "color": 0,
                "created": 1520160803000,
                "size": "s",
                "title": "Не забыть выгулять Сиба-Ину",
                "type": "text",
              }
            }
          />
        </div>
      </div>,
      "className": "note s",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <div
            className="note__attachment"
          >
            <NoteText
              colors={
                Array [
                  Object {
                    "color": "#E84747",
                    "id": 0,
                  },
                ]
              }
              note={
                Object {
                  "color": 0,
                  "created": 1520160803000,
                  "size": "s",
                  "title": "Не забыть выгулять Сиба-Ину",
                  "type": "text",
                }
              }
            />
          </div>,
        ],
        "className": "note__reminder",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NoteText
                colors={
                  Array [
                    Object {
                      "color": "#E84747",
                      "id": 0,
                    },
                  ]
                }
                note={
                  Object {
                    "color": 0,
                    "created": 1520160803000,
                    "size": "s",
                    "title": "Не забыть выгулять Сиба-Ину",
                    "type": "text",
                  }
                }
              />,
              undefined,
            ],
            "className": "note__attachment",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "colors": Array [
                  Object {
                    "color": "#E84747",
                    "id": 0,
                  },
                ],
                "note": Object {
                  "color": 0,
                  "created": 1520160803000,
                  "size": "s",
                  "title": "Не забыть выгулять Сиба-Ину",
                  "type": "text",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            undefined,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="note__reminder"
        >
          <div
            className="note__attachment"
          >
            <NoteText
              colors={
                Array [
                  Object {
                    "color": "#E84747",
                    "id": 0,
                  },
                ]
              }
              note={
                Object {
                  "color": 0,
                  "created": 1520160803000,
                  "size": "s",
                  "title": "Не забыть выгулять Сиба-Ину",
                  "type": "text",
                }
              }
            />
          </div>
        </div>,
        "className": "note s",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            <div
              className="note__attachment"
            >
              <NoteText
                colors={
                  Array [
                    Object {
                      "color": "#E84747",
                      "id": 0,
                    },
                  ]
                }
                note={
                  Object {
                    "color": 0,
                    "created": 1520160803000,
                    "size": "s",
                    "title": "Не забыть выгулять Сиба-Ину",
                    "type": "text",
                  }
                }
              />
            </div>,
          ],
          "className": "note__reminder",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NoteText
                  colors={
                    Array [
                      Object {
                        "color": "#E84747",
                        "id": 0,
                      },
                    ]
                  }
                  note={
                    Object {
                      "color": 0,
                      "created": 1520160803000,
                      "size": "s",
                      "title": "Не забыть выгулять Сиба-Ину",
                      "type": "text",
                    }
                  }
                />,
                undefined,
              ],
              "className": "note__attachment",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "colors": Array [
                    Object {
                      "color": "#E84747",
                      "id": 0,
                    },
                  ],
                  "note": Object {
                    "color": 0,
                    "created": 1520160803000,
                    "size": "s",
                    "title": "Не забыть выгулять Сиба-Ину",
                    "type": "text",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              undefined,
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
