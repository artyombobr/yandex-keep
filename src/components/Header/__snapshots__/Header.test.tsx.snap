// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header correct render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    dispatch={[Function]}
    isVisibleModal={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Logo
          className="header__logo"
          color="#000"
        />,
        <input
          className="header__checkbox"
          id="toggle"
          type="checkbox"
        />,
        <label
          className="header__hamburger"
          htmlFor="toggle"
        >
          <span
            className="navicon"
          />
        </label>,
        <div
          className="header__right right"
        >
          <div
            className="right__menu menu"
          >
            <NavLink
              activeClassName="menu__link_active"
              className="menu__link"
              exact={true}
              to="/"
            >
              Активные
            </NavLink>
            <NavLink
              activeClassName="menu__link_active"
              className="menu__link"
              to="/archive"
            >
              Архив
            </NavLink>
            <button
              className="menu__button"
              onClick={[Function]}
              type="button"
            >
              Добавить
            </button>
          </div>
          <UNDEFINED
            className="right__search"
          />
        </div>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "header__logo",
          "color": "#000",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "header__checkbox",
          "id": "toggle",
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="navicon"
          />,
          "className": "header__hamburger",
          "htmlFor": "toggle",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "navicon",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="right__menu menu"
            >
              <NavLink
                activeClassName="menu__link_active"
                className="menu__link"
                exact={true}
                to="/"
              >
                Активные
              </NavLink>
              <NavLink
                activeClassName="menu__link_active"
                className="menu__link"
                to="/archive"
              >
                Архив
              </NavLink>
              <button
                className="menu__button"
                onClick={[Function]}
                type="button"
              >
                Добавить
              </button>
            </div>,
            <UNDEFINED
              className="right__search"
            />,
          ],
          "className": "header__right right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavLink
                  activeClassName="menu__link_active"
                  className="menu__link"
                  exact={true}
                  to="/"
                >
                  Активные
                </NavLink>,
                <NavLink
                  activeClassName="menu__link_active"
                  className="menu__link"
                  to="/archive"
                >
                  Архив
                </NavLink>,
                <button
                  className="menu__button"
                  onClick={[Function]}
                  type="button"
                >
                  Добавить
                </button>,
              ],
              "className": "right__menu menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "menu__link_active",
                  "children": "Активные",
                  "className": "menu__link",
                  "exact": true,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Активные",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "menu__link_active",
                  "children": "Архив",
                  "className": "menu__link",
                  "to": "/archive",
                },
                "ref": null,
                "rendered": "Архив",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Добавить",
                  "className": "menu__button",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Добавить",
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "right__search",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(Search)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": "div",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Logo
            className="header__logo"
            color="#000"
          />,
          <input
            className="header__checkbox"
            id="toggle"
            type="checkbox"
          />,
          <label
            className="header__hamburger"
            htmlFor="toggle"
          >
            <span
              className="navicon"
            />
          </label>,
          <div
            className="header__right right"
          >
            <div
              className="right__menu menu"
            >
              <NavLink
                activeClassName="menu__link_active"
                className="menu__link"
                exact={true}
                to="/"
              >
                Активные
              </NavLink>
              <NavLink
                activeClassName="menu__link_active"
                className="menu__link"
                to="/archive"
              >
                Архив
              </NavLink>
              <button
                className="menu__button"
                onClick={[Function]}
                type="button"
              >
                Добавить
              </button>
            </div>
            <UNDEFINED
              className="right__search"
            />
          </div>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "header__logo",
            "color": "#000",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "header__checkbox",
            "id": "toggle",
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="navicon"
            />,
            "className": "header__hamburger",
            "htmlFor": "toggle",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "navicon",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="right__menu menu"
              >
                <NavLink
                  activeClassName="menu__link_active"
                  className="menu__link"
                  exact={true}
                  to="/"
                >
                  Активные
                </NavLink>
                <NavLink
                  activeClassName="menu__link_active"
                  className="menu__link"
                  to="/archive"
                >
                  Архив
                </NavLink>
                <button
                  className="menu__button"
                  onClick={[Function]}
                  type="button"
                >
                  Добавить
                </button>
              </div>,
              <UNDEFINED
                className="right__search"
              />,
            ],
            "className": "header__right right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <NavLink
                    activeClassName="menu__link_active"
                    className="menu__link"
                    exact={true}
                    to="/"
                  >
                    Активные
                  </NavLink>,
                  <NavLink
                    activeClassName="menu__link_active"
                    className="menu__link"
                    to="/archive"
                  >
                    Архив
                  </NavLink>,
                  <button
                    className="menu__button"
                    onClick={[Function]}
                    type="button"
                  >
                    Добавить
                  </button>,
                ],
                "className": "right__menu menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "menu__link_active",
                    "children": "Активные",
                    "className": "menu__link",
                    "exact": true,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Активные",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "menu__link_active",
                    "children": "Архив",
                    "className": "menu__link",
                    "to": "/archive",
                  },
                  "ref": null,
                  "rendered": "Архив",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Добавить",
                    "className": "menu__button",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Добавить",
                  "type": "button",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "right__search",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Search)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": "div",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
